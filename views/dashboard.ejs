<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard di <%= user.name %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@1.0.0/dist/chartjs-adapter-moment.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-control-custom@1.0.0/Leaflet.Control.Custom.js"></script>
    <style>
        #map { height: 400px; width: 100%; }
        .workout-item { cursor: pointer; }
        .workout-item:hover { background-color: #f8f9fa; }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Dashboard di <%= user.name %></h1>
        
        <div class="row">
            <div class="col-12 mb-4">
                <h2>Allenamenti</h2>
                <% if (data.workouts && data.workouts.length > 0) { %>
                    <ul id="workoutList" class="list-group">
                        <% data.workouts.forEach((workout, index) => { %>
                            <li class="list-group-item workout-item" data-index="<%= index %>">
                                <%= workout.type %> - Inizio: <%= workout.start %>, Fine: <%= workout.end %>, Durata: <%= workout.duration %> minuti
                            </li>
                        <% }); %>
                    </ul>
                <% } else { %>
                    <p>Nessun allenamento registrato.</p>
                <% } %>
            </div>
        </div>

        <div id="workoutDetails" style="display: none;">
            <h2 id="workoutTitle"></h2>
            <div class="row">
                <div class="col-md-6 mb-4">
                    <h3>Frequenza Cardiaca</h3>
                    <% if (data.heartRate.length > 0) { %>
                        <canvas id="heartRateChart"></canvas>
                    <% } else { %>
                        <p>Nessun dato di frequenza cardiaca disponibile.</p>
                    <% } %>
                </div>
                <div class="col-md-6 mb-4">
                    <h3>Passi</h3>
                    <% if (data.steps.length > 0) { %>
                        <canvas id="stepsChart"></canvas>
                    <% } else { %>
                        <p>Nessun dato di passi disponibile.</p>
                    <% } %>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-4">
                    <h3>Calorie</h3>
                    <% if (data.calories.length > 0) { %>
                        <canvas id="caloriesChart"></canvas>
                    <% } else { %>
                        <p>Nessun dato di calorie disponibile.</p>
                    <% } %>
                </div>
                <div class="col-md-6 mb-4">
                    <h3>Altitudine</h3>
                    <% if (data.altitude.length > 0) { %>
                        <canvas id="altitudeChart"></canvas>
                    <% } else { %>
                        <p>Nessun dato di altitudine disponibile.</p>
                    <% } %>
                </div>
            </div>
            <div class="row">
                <div class="col-12 mb-4">
                    <h3>Mappa Percorso</h3>
                    <div id="map"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const heartRateData = <%- JSON.stringify(data.heartRate) %>;
            const stepsData = <%- JSON.stringify(data.steps) %>;
            const caloriesData = <%- JSON.stringify(data.calories) %>;
            const altitudeData = <%- JSON.stringify(data.altitude) %>;
            const gpsData = <%- JSON.stringify(data.gpsData) %>;
            const workouts = <%- JSON.stringify(data.workouts) %>;

            console.log('Dati frequenza cardiaca ricevuti:', heartRateData);
            console.log('Dati passi ricevuti:', stepsData);
            console.log('Dati calorie ricevuti:', caloriesData);
            console.log('Dati altitudine ricevuti:', altitudeData);
            console.log('Dati GPS ricevuti:', gpsData);
            console.log('Dati workout ricevuti:', workouts);

            let charts = {};
            let map;

            function createChart(canvasId, data, label, color) {
                const canvas = document.getElementById(canvasId);
                if (!canvas) {
                    console.error(`Canvas element with id ${canvasId} not found`);
                    return;
                }
                const ctx = canvas.getContext('2d');
                return new Chart(ctx, {
                    type: 'line',
                    data: {
                        datasets: [{
                            label: label,
                            data: data,
                            borderColor: color,
                            fill: false
                        }]
                    },
                    options: {
                        scales: {
                            x: {
                                type: 'time',
                                time: {
                                    unit: 'minute'
                                }
                            }
                        }
                    }
                });
            }

            function updateChart(chart, newData) {
                chart.data.datasets[0].data = newData;
                chart.update();
            }

            function createOrUpdateMap(gpsData) {
                console.log('Creating/Updating map with GPS data:', gpsData);

                if (map) {
                    map.remove();
                }

                if (!gpsData || gpsData.length === 0) {
                    console.log('No GPS data available');
                    document.getElementById('map').innerHTML = 'Nessun dato GPS disponibile per questo allenamento';
                    return;
                }

                map = L.map('map');

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                const points = gpsData.map(point => [point.lat, point.lng]);
                console.log('Polyline points:', points);

                const polyline = L.polyline(points, {color: 'red'}).addTo(map);
                
                map.setView(points[0], 16);

                if (points.length > 1) {
                    L.marker(points[0]).addTo(map).bindPopup('Inizio').openPopup();
                    L.marker(points[points.length - 1]).addTo(map).bindPopup('Fine');
                }

                L.control.zoom({
                    position: 'topright'
                }).addTo(map);

                L.control.custom({
                    position: 'topright',
                    content : '<button class="btn btn-sm btn-primary">Mostra tutto</button>',
                    classes : '',
                    style   : '',
                    events: {
                        click: function(data) {
                            map.fitBounds(polyline.getBounds());
                        }
                    }
                }).addTo(map);

                console.log('Map created/updated successfully');
            }

            function showWorkoutDetails(workout) {
                const startTime = moment(workout.start);
                const endTime = moment(workout.end);

                const filterDataByTimeRange = (data) => {
                    return data.filter(item => {
                        const itemTime = moment(item.x);
                        return itemTime.isBetween(startTime, endTime);
                    });
                };

                const workoutHeartRate = filterDataByTimeRange(heartRateData);
                const workoutSteps = filterDataByTimeRange(stepsData);
                const workoutCalories = filterDataByTimeRange(caloriesData);
                const workoutAltitude = filterDataByTimeRange(altitudeData);
                const workoutGPS = gpsData.filter(item => {
                    const itemTime = moment(item.timestamp);
                    return itemTime.isBetween(startTime, endTime);
                });

                console.log('Filtered GPS data for workout:', workoutGPS);

                if (!charts.heartRate) {
                    charts.heartRate = createChart('heartRateChart', workoutHeartRate, 'Frequenza Cardiaca', 'rgb(255, 99, 132)');
                    charts.steps = createChart('stepsChart', workoutSteps, 'Passi', 'rgb(54, 162, 235)');
                    charts.calories = createChart('caloriesChart', workoutCalories, 'Calorie', 'rgb(255, 206, 86)');
                    charts.altitude = createChart('altitudeChart', workoutAltitude, 'Altitudine', 'rgb(75, 192, 192)');
                } else {
                    updateChart(charts.heartRate, workoutHeartRate);
                    updateChart(charts.steps, workoutSteps);
                    updateChart(charts.calories, workoutCalories);
                    updateChart(charts.altitude, workoutAltitude);
                }

                createOrUpdateMap(workoutGPS);

                document.getElementById('workoutTitle').textContent = `Dettagli ${workout.type}: ${workout.start} - ${workout.end}`;
                document.getElementById('workoutDetails').style.display = 'block';
            }

            document.querySelectorAll('.workout-item').forEach(item => {
                item.addEventListener('click', function() {
                    const index = this.getAttribute('data-index');
                    showWorkoutDetails(workouts[index]);
                });
            });
        });
    </script>
</body>
</html>
